
set @schema public.getenv('SCHEMA');
set schema @schema;

-- 設定
create table if not exists settings (
    keyword varchar(50 characters) primary key comment 'キーワード'
  , setting_value varchar(1000 characters) not null comment '設定値'
  , note varchar(1000 characters) not null default '' comment '備考'
);
comment on table settings is '設定';

-- 休日カレンダー
create table if not exists holidays (
    organization_id bigint not null default -1 comment '組織（-1: デフォルト休日カレンダー）'
  , holiday date not null comment '休日'
  , primary key (organization_id, holiday)
);
comment on table holidays is '休日カレンダー';

-- カテゴリー
create table if not exists categories (
    keyword varchar(50 characters) not null comment 'キーワード'
  , code varchar(50 characters) not null comment 'コード'
  , name varchar(1000 characters) not null comment '名称'
  , short_name varchar(1000 characters) not null comment '略称'
  , show_order int not null default 1 comment '表示順'
  , primary key (keyword, code)
);
comment on table categories is 'カテゴリー';

-- ラベル
create table if not exists labels (
    keyword varchar(50 characters) primary key comment 'キーワード'
  , label varchar(1000 characters) not null comment 'ラベル'
  , short_label varchar(1000 characters) not null comment 'ラベルの省略値'
);
comment on table labels is 'ラベル';

-- メッセージ
create table if not exists messages (
    keyword varchar(50 characters) primary key comment 'キーワード'
  , message varchar(1000 characters) not null comment 'メッセージ'
);
comment on table messages is 'メッセージ';

-- 役割
create table roles (
    id bigint generated by default as identity primary key comment '識別子'
  , name varchar(1000 characters) not null comment '名称'
  , show_order int not null default 1 comment '表示順'
);
comment on table roles is '役割';

-- 役割・機能
create table role_features (
    id bigint generated by default as identity primary key comment '識別子'
  , role_id bigint not null  comment '役割識別子'
  , feature varchar(50 characters) not null comment '機能コード'
);
comment on table roles is '役割・機能';

-- 組織
create table organizations (
    id bigint generated by default as identity primary key comment '識別子'
  , code varchar(10 characters) not null comment 'コード'
  , name varchar(1000 characters) not null comment '名称'
  , upper_organization_id bigint comment '所属（上位）組織'
  , hierarchy int not null comment '階層'
  , show_order int not null default 1 comment '同一階層中の表示順'
  , validity varchar(50 characters) not null default '1' comment '0:無効 / 1:有効'
);
comment on table organizations is '組織';

-- 社員
create table if not exists employees (
    id bigint generated by default as identity primary key comment '識別子'
  , no varchar(10 characters) not null comment '社員番号'
  , name varchar(1000 characters) not null comment '名前'

  , login_id varchar(10 characters) not null comment 'ログインで使用するログインID'
  , password_digest varchar(1024 characters) not null comment 'ログインで使用するパスワード'
  , choice_id varchar(1024 characters) not null comment '選択肢で使用するID'

  , role_id bigint not null comment '役割ID'
  , organization_id bigint not null comment '所属組織ID'

  , last_login_at timestamp comment '最終ログイン日時'
  , n_of_login_failes int not null default 0 comment 'ログイン失敗回数'

  , validity varchar(50 characters) not null default '1' comment '0:無効 / 1:有効'
);
comment on table employees is '社員';

-- 社員セット
create table if not exists employee_sets (
    id bigint generated by default as identity primary key comment '識別子'
  , name varchar(1000 characters) not null default '' comment '名称'
  , owner_organization_id bigint comment '所有組織'
  , owner_employee_id bigint comment '所有者'
);
comment on table employee_sets is '社員セット';

-- 社員セットメンバー
create table if not exists employee_set_members (
    employee_set_id bigint not null comment '社員セットID'
  , employee_id bigint not null comment '社員ID'
  , primary key (employee_set_id, employee_id)
);
comment on table employee_set_members is '社員セットメンバー';

-- 勤怠種別
create table attendance_kinds (
    id bigint generated by default as identity primary key comment '識別子'
  , name varchar(1000 characters) not null comment '名称'
  , short_name varchar(1000 characters) not null comment '略称'

  , family varchar(50 characters) not null default '1' comment '1:単独 / 2:計画と実績'

  , begin_date varchar(50 characters) not null default '1' comment '0:不要 / 1:必須 / 2:任意'
  , begin_time varchar(50 characters) not null default '0' comment '0:不要 / 1:必須 / 2:任意'
  , end_date varchar(50 characters) not null default '0' comment '0:不要 / 1:必須 / 2:任意'
  , end_time varchar(50 characters) not null default '0' comment '0:不要 / 1:必須 / 2:任意'

  , shift varchar(50 characters) not null default '1' comment '0:任意 / 1:必須'
  , reason varchar(50 characters) not null default '1' comment '0:任意 / 1:必須'

  , show_order int not null default 1 comment '表示順'
  , validity varchar(50 characters) not null default '1' comment '0:無効 / 1:有効'
);
comment on table attendance_kinds is '勤怠種別';

-- 勤怠
create table attendances (
    id bigint generated by default as identity primary key comment '識別子'
  , attendance_kind_id bigint not null comment '勤怠種別ID'

  , status varchar(50 characters) not null comment '1:作成中 / 2:申請中 / 3:承認 / 4:却下'
  , subfamily varchar(50 characters) not null comment '1:単独 / 2:計画 / 3:実績'
  , execution varchar(50 characters) not null comment '0:未実施 / 1:実施済'

  , begin_date date not null comment '開始日'
  , begin_time varchar(5 characters) not null default '' comment '開始時刻("00:00", "26:30")'
  , end_date date comment '終了日'
  , end_time varchar(5 characters) not null default '' comment '終了時刻("00:00", "26:30")'

  , shift varchar(50 characters) not null default '' comment '勤務形態'
  , reason varchar(4000 characters) not null default '' comment '理由'

  , application_date date comment '申請日'

  , agent_id bigint comment '代理申請者ID'

  , approver_id bigint comment '承認者ID'
  , approval_date date comment '承認日'
  , approval_comment varchar(4000 characters) not null default '' comment '承認コメント'

  , related_id bigint comment 'null / 複写元ID / 計画勤怠ID'

  , validity varchar(50 characters) not null default '1' comment '0:無効 / 1:有効'
  
  , lock_version bigint not null default 0
  , created_at timestamp not null
  , updated_at timestamp not null
);
comment on table attendances is '勤怠';

-- 勤怠明細メンバー
create table attendance_members (
    attendance_id bigint not null comment '勤怠ID'
  , employee_id bigint not null comment '社員ID'
  , primary key(attendance_id, employee_id)
);
comment on table attendance_members is '勤怠メンバー';

